#include "Tranche.hpp"

using namespace std;

int main()
{

char MY_TIME[50];

COleDateTime * tp=ToTime("07/15/2017");
COleDateTime * pp = ToTime("08/15/2017");


cout << str(pp->Format(_T("%A, %B %d, %Y"))) <<" " << daydiff(tp,pp) << endl;

vector<fee*> * fees= new vector<fee*>;

fees->push_back(new fee ( .0002, false, "Admin Fees (Floating)"));
fees->push_back(new fee ( 200000, true, "Admin Fees (Fixed)"));
fees->push_back(new fee ( .002, false, "Senior Management Fee"));
fees->push_back(new fee ( .002, false, "Subordinate Management Fee"));

cout << "make curve" << endl;

vector<double> * forwardCurve;
forwardCurve= new vector<double>( {0.004239,0.004275,0.004295,0.004225,0.004220,0.004235,0.004235,0.004238,0.004240,0.004245,0.004255,0.004255,0.004260,0.004250,0.004253,0.004265,0.004255,0.004306,0.004306,0.004280,0.004262,0.004250,0.004270,0.004285,0.004285,0.004277,0.004289,0.004293,0.004285,0.004265,0.004305,0.004293,0.004295,0.004301,0.004320,0.004335,0.004335,0.004358,0.004338,0.004385,0.004385,0.004405,0.004353,0.004376,0.004405,0.004380,0.004405,0.004419,0.004380,0.004381,0.004362,0.004413,0.004413,0.004399,0.004321,0.004283,0.004318,0.004315,0.004315,0.004315,0.004330,0.004350,0.004329,0.004340,0.004373,0.004374,0.004402,0.004385,0.004390,0.004365,0.004347,0.004379,0.004387,0.004373,0.004347,0.004345,0.004340,0.004362,0.004387,0.004385,0.004430,0.004433,0.004460,0.004442,0.004497,0.004545,0.004567,0.004689,0.004696,0.004631,0.004648,0.004471,0.004458,0.004453,0.004471,0.004466,0.004421,0.004423,0.004461,0.004481,0.004478,0.004481,0.004508,0.004521,0.004533,0.004493,0.004588,0.004603,0.004666,0.004676,0.004696,0.004703,0.004726,0.004743,0.004758,0.004779,0.004794,0.004814,0.004821,0.004833,0.004866,0.004853,0.004874,0.004879,0.004904,0.004909,0.004927,0.004957,0.004939,0.004959,0.004939,0.004939,0.004969,0.004984,0.005039,0.005119,0.005132,0.005177,0.005077,0.005067,0.005074,0.005074,0.005141,0.005124,0.005211,0.005222,0.005244,0.005199,0.005199,0.005238,0.005244,0.005232,0.005249,0.005257,0.005193,0.005166,0.005132,0.005182,0.005269,0.005277,0.005243,0.005296,0.005309,0.005318,0.005362,0.005431,0.005463,0.005253,0.005222,0.005244,0.005267,0.005244,0.005272,0.005311,0.005283,0.005272,0.005257,0.005290,0.005296,0.005307,0.005346,0.005346,0.005357,0.005279,0.005257,0.005246,0.005240,0.005340,0.005340,0.005359,0.005348,0.005343,0.005327,0.005338,0.005304,0.005320,0.005326,0.005353,0.005353,0.005370,0.005382,0.005382,0.005421,0.005501,0.005546,0.005618,0.005660,0.005678,0.005920,0.006026,0.006059,0.006056,0.006167,0.006237,0.006345,0.006467,0.006519,0.006489,0.006542,0.006639,0.006800,0.006947,0.007039,0.007073,0.007362,0.007390,0.007440,0.007490,0.007550,0.007550,0.007561,0.007611,0.007700,0.007711,0.007717,0.007733,0.007656,0.007656,0.007633,0.007633,0.007650,0.007672,0.007683,0.007678,0.007694,0.007767,0.007764,0.007753,0.007711,0.007733,0.007761,0.007761,0.007783,0.007800,0.007794,0.007800,0.007767,0.007756,0.007753,0.007728,0.007717,0.007706,0.007711,0.007700,0.007700,0.007722,0.007794,0.007772,0.007794,0.007794,0.007783,0.007806,0.007844,0.007889,0.008106,0.008300,0.008344,0.008467,0.008544,0.008578,0.008814});
vector<Asset*>* rp = new vector<Asset*>;

cout << "make assets" << endl;


rp->push_back(
Waterfall :: ReinvestmentAsset(.5, .985, .04, 6,
.01, "Asset 1"          ,   //  ^  need to impliment limited life in stage 2
.2,1,.7, forwardCurve->size()));// do it with admert schedule

rp->push_back(
Waterfall :: ReinvestmentAsset(.5, .9975, .04, 6,
.01, "Asset 2"          ,
.2,1,.7,forwardCurve->size()));


cout << "begin construction" << endl;

Waterfall *deal = new Waterfall  (
			rp,
			"07/15/2017",
			"10/15/2017",
			"11/15/2017",
			"07/15/2022",
			"07/15/2052",			forwardCurve, fees,
1,1,1,0,0,0);

vector<double> * setDefaultRate = NULL;
cout << "finished c" << endl;

deal -> addAssets(450000000*2,0.0415,.01,1,0,.07,.2,1,2,.7);

deal->addToTranches("A",288000000,0.0155,"AAA","NR","NR",0.36,0,0,0);
deal->addToTranches("B",51750000,0.021,"AA","NR","NR",0.245,1.2045033113,0.12,1.2);
deal->addToTranches("C",27000000,0.028,"A","NR","NR",0.185,1.136993865,0.09,1.15);
deal->addToTranches("D",24750000,0.04,"BBB","NR","NR",0.13,1.0794252874,0.07,1.1);
deal->addToTranches("E",22500000,0.07,"BB","NR","NR",0.08,1.0319565217,0.055,1.05);
deal->addToTranches("F",0,0,"NR","NR","NR",0.08,0,0,0);
deal->addToTranches("G",0,0,"NR","NR","NR",0.08,0,0,0);
deal->addToTranches("H",0,0,"NR","NR","NR",0.08,0,0,0);
deal->addToTranches("I",0,0,"NR","NR","NR",0.08,0,0,0);
deal->addToTranches("SUB",36000000,0,"NR","NR","NR",0,0,0,0, false);
cout << "make log" << endl;

cout << deal->Log << endl;

deal -> UpdateLog();

cout << "output" << endl;

deal -> Log2csv();

cout << "doone" << endl;

	return 0;
};
